//
//  SingInViewController.swift
//  Pruebabambu
//
//  Created luis hector hernandez godinez  on 12/09/22.
//  Copyright © 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class SingInViewController: UIViewController, SingInViewProtocol {
    
    
    @IBOutlet weak var btnRegistro: UIButton!
    @IBOutlet weak var txfEmail: UITextField!
    @IBOutlet weak var txfContraseña: UITextField!
    @IBOutlet weak var btnAcceder: UIButton!
    
    
    var presenter: SingInPresenterProtocol?
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.hideKeyboardWhenTappedAround()
        btnAcceder.layer.cornerRadius = 18
    }
    
    func actualizarDatosUsuariosEmail(isSucces: Bool) {
        removeSpinner()
        if isSucces == true {
            
            didError(message: "Login Creado", title: "Exitoso")
            
        } else {
            didError(message: "Ocurrió un erro", title: "Error")
        }
    }
    func didError(message: String, title: String) {
        let alertController = UIAlertController(title: title, message: message , preferredStyle: .alert)
        alertController.addAction(UIAlertAction(title: "Aceptar", style: UIAlertAction.Style.destructive, handler: { action in
            self.dismiss(animated: true)
            
        }))
        self.present(alertController, animated: true, completion: nil)
    }
    
    @IBAction func btnActionAcceder(_ sender: Any) {
        
        
        guard let emailAcceder = txfEmail.text  else {
            return
        }
        
        guard let contraseñaAcceder = txfContraseña.text  else {
            
            return
        }
        showSpinner(onView: self.view)
        
        self.presenter?.datosUsuarioEmail(email: emailAcceder , password: contraseñaAcceder)
    }
    
    @IBAction func btnActionRegister(_ sender: Any) {
        
        let myViewController = RegisterRouter.createModule()
        myViewController.modalPresentationStyle = .fullScreen
        self.present(myViewController, animated: true, completion: nil)
        
    }
}

extension UIViewController {
    func hideKeyboardWhenTappedAround() {
        let tap = UITapGestureRecognizer(target: self, action: #selector(UIViewController.dismissKeyboard))
        tap.cancelsTouchesInView = false
        view.addGestureRecognizer(tap)
    }
    
    @objc func dismissKeyboard() {
        view.endEditing(true)
    }
}
